# دليل حل الأخطاء لـ Airflow DAG

هذا الدليل يلخص الأخطاء الشائعة التي يمكن أن تحدث عند تشغيل خط أنابيب بيانات (Data Pipeline) على Airflow وكيفية حلها، بناءً على تجربتنا في إصلاح الـ DAG `full_pipeline_v5`.

---

### 1. الخطأ: فشل الاتصال بواجهة الـ API (`Connection refused`)

**وصف المشكلة:**
يحدث هذا الخطأ عندما لا يتمكن Airflow من الاتصال بخادم الـ API الخاص بك. كان السبب هو أن الكود كان يستخدم عنوان IP غير صحيح أو غير متاح للاتصال.

**كيف تم الحل:**
* **تم تعديل سطر الكود في دوال الاستخراج**.
* تم تغيير عنوان IP إلى العنوان الصحيح الذي يمكن الوصول إليه من شبكة Docker، وهو **`192.168.0.143:8000`**.

---

### 2. الخطأ: فشل الاتصال بقاعدة البيانات (`Connection refused`)

**وصف المشكلة:**
يحدث هذا الخطأ عندما لا يتمكن Airflow (الذي يعمل داخل صندوق Docker) من الاتصال بقاعدة البيانات (PostgreSQL). كان السبب هو أن الكود كان يحاول الاتصال بـ `localhost`، بينما `localhost` من منظور Airflow هو نفس صندوق Docker وليس جهاز الكمبيوتر الذي توجد عليه قاعدة البيانات.

**كيف تم الحل:**
* **تم تعديل سطر الكود في دالة `load_data_to_postgres`**.
* تم تغيير `host="localhost"` إلى **`host="postgres_db"`**.
* الاسم `postgres_db` هو اسم حاوية Docker الخاصة بقاعدة البيانات، مما يسمح لصندوق Airflow بالوصول إليها عبر شبكة Docker.

---

### 3. الخطأ: الأعمدة غير موجودة (`column "..." does not exist`)

**وصف المشكلة:**
يظهر هذا الخطأ عندما تحاول دالة التحميل إدخال بيانات إلى جدول في قاعدة البيانات، ولكن الأعمدة في البيانات لا تتطابق مع الأعمدة الموجودة في الجدول. كان الـ DAG القديم ينشئ جدولاً بأعمدة غير صحيحة، بينما كانت البيانات القادمة من الـ API تحتوي على أعمدة صحيحة.

**كيف تم الحل:**
* **تم تعديل أوامر `CREATE TABLE`** في مهام `SQLExecuteQueryOperator`.
* أصبح أمر إنشاء الجدول يتضمن الأعمدة الصحيحة التي تتطابق تمامًا مع البيانات القادمة من الـ API.
* تم تغيير `id` إلى **`customer_id`** و إضافة عمود **`region`** في جدول العملاء.
* تم تغيير `id` إلى **`purchase_id`** و إضافة الأعمدة **`amount`** و **`date`** في جدول المشتريات.

---

### 4. الخطأ: استمرار ظهور مشكلة الأعمدة بعد التعديل

**وصف المشكلة:**
بعد تعديل أوامر `CREATE TABLE`، قد يستمر ظهور خطأ الأعمدة. السبب هو أن الأداة `SQLExecuteQueryOperator` تستخدم أمر `IF NOT EXISTS`، مما يعني أنها لن تقوم بتعديل الجدول إذا كان موجوداً بالفعل. لذلك، حتى بعد تحديث الكود، فإن الجداول القديمة ذات الأعمدة الخاطئة لا تزال موجودة في قاعدة البيانات.

**كيف تم الحل:**
* **تم إضافة أمر `DROP TABLE IF EXISTS` قبل أمر `CREATE TABLE`**.
* هذا يضمن أن يتم حذف الجداول القديمة تمامًا، ثم يتم إعادة إنشائها من الصفر بالأعمدة الصحيحة في كل مرة يتم فيها تشغيل الـ DAG. هذا يضمن أن تكون الجداول محدثة دائمًا.